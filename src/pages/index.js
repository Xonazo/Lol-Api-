import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import React, { useState, useEffect } from 'react';
import championsData  from "resources/champions.json";
const inter = Inter({ subsets: ['latin'] })


export default function Home() {
  const [summonerData, setSummonerData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [summonerName, setSummonerName] = useState('');
  const [rotation, setRotation] = useState(null);




  useEffect(() => {
    handleRotation();
  }, []);


  const handleSearch = async () => {
    setLoading(true);

    const url = `https://la2.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summonerName}?api_key=${process.env.KEY}`;
    console.log(process.env.KEY);

    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error('Error al obtener los datos de la API');
      }
      const data = await response.json();
      setSummonerData(data);
      setLoading(false);
    } catch (error) {
      setError(error);
      setLoading(false);
    }
  };




  const handleRotation = async () => {
    setLoading(true);
    const url = `https://la2.api.riotgames.com/lol/platform/v3/champion-rotations/?api_key=${process.env.KEY}`;
    try {
      const response = await fetch(url);
      if (!response.ok) {
        throw new Error('Error al obtener los datos de la API');
      }
      const data = await response.json();
      setRotation(data);
      setLoading(false);
    } catch (error) {
      setError(error);
      setLoading(false);
    }
  };

  function getChampionName(championId, championsData) {
    for (let champion in championsData) {
     // console.log(championsData[champion]);
    // console.log(championsData.data.Nilah.key);

     //console.log(championsData[champion])
      //console.log(championsData.champion.data);
    
    
  
      if (championsData.data.Kayle.key === championId) {
       // console.log("dsadasdas"+championsData[champion].name)
        return championsData[champion].name;
      }
    }
    return 'Nombre no encontrado';
  }


/* parte de html
   <div className='rotation'>
  <h1>Campeones de la rotaci√≥n semanal:</h1>
  {rotation && rotation.freeChampionIds.map((championId, index) => (
    <div key={index}>
      <img src={`http://ddragon.leagueoflegends.com/cdn/13.3.1/img/champion/${championId}.png`} alt={championId} />
      <h2>{getChampionName(championId, championsData)}</h2>
    </div>
  ))}
</div>

*/


  return (
    <>
      <Head>
        <title>Lol Buscador</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='container'>
        <input type="text" value={summonerName} onChange={e => setSummonerName(e.target.value)} />
        <button onClick={handleSearch}>Buscar</button>
      </div>
      <div className='datos'>
        {loading && <p>Cargando...</p>}
        {error && <p>Error: {error.message}</p>}
        <h1>Invocador: {summonerData && summonerData.name}</h1>
        <h1>Nivel: {summonerData && summonerData.summonerLevel}</h1>
        {summonerData && summonerData.profileIconId !== null ? (
          <img src={`http://ddragon.leagueoflegends.com/cdn/13.3.1/img/profileicon/${summonerData.profileIconId}.png`} alt="Profile Icon" />
        ) : null}
      </div>
   
    </>
  )
}
